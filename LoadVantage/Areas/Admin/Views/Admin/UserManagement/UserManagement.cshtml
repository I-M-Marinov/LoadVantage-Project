@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using LoadVantage.Extensions
@using LoadVantage.Areas.Admin.Models.User

@model UsersListModel

@{

	Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
	ViewData["Title"] = "User Management";

	var tempDataSuccessMessage = TempData.GetSuccessMessage();
	var tempDataErrorMessage = TempData.GetErrorMessage();

}

<!-- ======= Header ======= -->
@await Html.PartialAsync("~/Areas/Admin/Views/AdminShared/_AdminHeaderPartialView.cshtml", Model.AdminProfile)

<!-- End Header -->
<!-- ======= Sidebar ======= -->
@await Html.PartialAsync("~/Areas/Admin/Views/AdminShared/_AdminSidebarPartialView.cshtml", Model.AdminProfile)

<!-- End Sidebar -->

<main id="main" class="main user-management">

	<div class="pagetitle">
		<h1>User Management</h1>

		<div id="adding-buttons-container">
			<button type="button" id="addNewUser" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal" data-modal-title="Create User" data-role="User">
				<i class="ri-user-add-fill"></i>
				Add User
			</button>

			<button type="button" id="addNewAdmin" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#addModal" data-modal-title="Create Administrator" data-role="Administrator">
				<i class="ri-user-add-fill"></i>
				Add Administrator
			</button>
		</div>


	</div>
	
	
<!-- Add Modal -->
	<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-area="Admin" asp-action="CreateUser" asp-controller="UserManagement" method="post" id="createUserForm">
					@Html.AntiForgeryToken()
					<div class="modal-header">
						<h5 class="modal-title" id="addModalLabel">Create New User</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<div class="row">
							<!-- First Row -->
							<div class="col-md-6 mb-3 justify-content-center user-infoinput">
								<label asp-for="NewUser.UserName" class="form-label mt-5">Username</label>
								<input asp-for="NewUser.UserName" class="form-control">
								<span asp-validation-for="NewUser.UserName" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.Email" class="form-label mt-5">Email</label>
								<input asp-for="NewUser.Email" class="form-control">
								<span asp-validation-for="NewUser.Email" class="text-danger"></span>
							</div>
						</div>
						<div class="row">
							<!-- Second Row -->
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.Password" class="form-label">Password</label>
								<input asp-for="NewUser.Password" type="password" class="form-control">
								<span asp-validation-for="NewUser.Password" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.PhoneNumber" class="form-label">Phone Number</label>
								<input asp-for="NewUser.PhoneNumber" type="tel" class="form-control">
								<span asp-validation-for="NewUser.PhoneNumber" class="text-danger"></span>
							</div>
						</div>
						<div class="row">
							<!-- Third Row -->
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.FirstName" class="form-label">First Name</label>
								<input asp-for="NewUser.FirstName" class="form-control">
								<span asp-validation-for="NewUser.FirstName" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.LastName" class="form-label">Last Name</label>
								<input asp-for="NewUser.LastName" class="form-control">
								<span asp-validation-for="NewUser.LastName" class="text-danger"></span>
							</div>
						</div>
						<div class="row">
							<!-- Fourth Row -->
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="NewUser.CompanyName" class="form-label">Company Name</label>
								<input asp-for="NewUser.CompanyName" class="form-control">
								<span asp-validation-for="NewUser.CompanyName" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput" id="position-select-element">
								<label asp-for="NewUser.Position" class="form-label">Position</label>
								<select asp-for="NewUser.Position" class="form-select position-select">
									<option value="Administrator">Administrator</option>
									<option value="Broker">Broker</option>
									<option value="Dispatcher">Dispatcher</option>
								</select>
								<span asp-validation-for="NewUser.Position" class="text-danger"></span>
							</div>
						</div>
					</div>
					<div class="modal-footer d-flex justify-content-center">
						<button type="submit" class="btn btn-primary"><i class="ri-user-add-fill"></i> Create</button>
						<input asp-for="NewUser.Id" type="hidden" name="NewUser.Id">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="ri-close-line"></i> Close</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	
	<!-- Edit User Modal -->
	<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-area="Admin" asp-action="EditUser" asp-controller="UserManagement" method="post" id="editUserForm">
					@Html.AntiForgeryToken()
					<div class="modal-header">
						<h5 class="modal-title" id="editUserModalLabel">Editing a User</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<div class="row">

							<!-- First Row -->
							<div class="col-md-6 mb-3 justify-content-center user-infoinput">
								<label asp-for="EditedUser.UserName" class="form-label mt-5">Username</label>
								<input asp-for="EditedUser.UserName" class="form-control">
								<span asp-validation-for="EditedUser.UserName" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="EditedUser.Email" class="form-label mt-5">Email</label>
								<input asp-for="EditedUser.Email" class="form-control">
								<span asp-validation-for="EditedUser.Email" class="text-danger"></span>
							</div>
						</div>
						<div class="row">

							<!-- Second Row -->
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="EditedUser.FirstName" class="form-label">First Name</label>
								<input asp-for="EditedUser.FirstName" class="form-control">
								<span asp-validation-for="EditedUser.FirstName" class="text-danger"></span>
							</div>
							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="EditedUser.LastName" class="form-label">Last Name</label>
								<input asp-for="EditedUser.LastName" class="form-control">
								<span asp-validation-for="EditedUser.LastName" class="text-danger"></span>
							</div>
						</div>
						<div class="row">
							<!-- Third Row -->

							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="EditedUser.PhoneNumber" class="form-label">Phone Number</label>
								<input asp-for="EditedUser.PhoneNumber" type="tel" class="form-control">
								<span asp-validation-for="EditedUser.PhoneNumber" class="text-danger"></span>
							</div>

							<div class="col-md-6 mb-3 user-infoinput">
								<label asp-for="EditedUser.CompanyName" class="form-label">Company Name</label>
								<input asp-for="EditedUser.CompanyName" class="form-control">
								<span asp-validation-for="EditedUser.CompanyName" class="text-danger"></span>
							</div>

						</div>


					</div>
					<div class="modal-footer d-flex justify-content-center">

						<button type="submit" class="btn btn-primary">Save</button>
						<input asp-for="EditedUser.Id" type="hidden" name="EditedUser.Id">
						<input asp-for="EditedUser.IsActive" type="hidden" name="EditedUser.IsActive">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

					</div>
				</form>
			</div>
		</div>
	</div>


	

	<div class="card">

		<div class="card-body position-relative">
			@if (!string.IsNullOrEmpty(tempDataSuccessMessage))
			{
				<div class="badge badge-danger mt-1 position-absolute top-0 start-50 translate-middle-x w-75" id="success-message">@tempDataSuccessMessage</div>
			}

			@if (!string.IsNullOrEmpty(tempDataErrorMessage))
			{
				<div class="badge badge-danger mt-1 position-absolute top-0 start-50 translate-middle-x w-75" id="error-message">@tempDataErrorMessage</div>
			}
			
			
			<div class="table-responsive mt-4">
				<div class="d-flex justify-content-between align-items-center mb-3" id="searchContainerUserManagement">
					<h5 class="card-title">User List</h5>
					<form id="searchUserForm" method="get" class="d-flex justify-content-end mb-3">
						<input type="hidden" name="pageNumber" value="1" />
						<input type="hidden" name="pageSize" value="@Model.PageSize" />
						<input type="hidden" name="adminId" value="@Model.AdminProfile.Id" />
						<input class="form-control me-2 search-users-imput form-control-sm" type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Search users..." />
						<button class="btn btn-primary search-users-btn" type="submit"> <i class="ri-user-search-fill"></i>  </button>
					</form>
				</div>

				<div class="table-responsive mt-4" id="users-table">

					<table class="table table-bordered table-hover table-sm">
						<thead>
						<tr>
							<th class="text-center hidden-th" scope="col" hidden>UserId</th>
							<th class="text-center" scope="col">Profile Picture</th>
							<th class="text-center" scope="col">Username</th>
							<th class="text-center" scope="col">Full Name</th>
							<th class="text-center" scope="col">Email</th>
							<th class="text-center" scope="col">Phone Number</th>
							<th class="text-center" scope="col">Company</th>
							<th class="text-center" scope="col">Role</th>
							<th class="text-center" scope="col">Position</th>
							<th class="text-center" scope="col">Actions</th>
						</tr>
						</thead>
						<tbody>
						@foreach (var user in Model.Users)
						{
							<tr>
								<td class="d-none" hidden>@user.Id</td>
								<td class="text-center">
									@if (user.IsActive)
									{
										<img src="@user.UserImageUrl" alt="Profile Picture" class="rounded-circle userImageManager" width="45" height="45">
									}
									else
									{
										<span class="badge badge-danger">Deactivated <br/> Account</span>
									}
								</td>
								<td class="text-center">@user.UserName</td>
								<td class="text-center">@user.FullName</td>
								<td class="text-center">@user.Email</td>
								<td class="text-center">@user.PhoneNumber</td>
								<td class="text-center">@user.CompanyName</td>
								<td class="text-center">@user.Role</td>
								<td class="text-center">@user.Position</td>
								<td class="text-center">
									<div class="d-flex justify-content-center align-items-center gap-2">
										
										<button class="btn btn-sm btn-primary edit-user-btn" title="Edit this user" data-id="@user.Id">
											<i class="bi bi-person-lines-fill"></i>
										</button>

										@if (user.Id != Model.AdminProfile.Id)
										{
											<a asp-area="Admin" asp-action="StartChatWithUser" asp-controller="AdminChat" asp-route-userId="@user.Id" class="btn btn-outline-primary" id="chatWithUserBtn">
												<i class="bi bi-chat-text-fill" title="Start a chat with the user."></i>
											</a>
										}

										@if (user.IsActive)
										{
											<form class="deactivateUserForm" asp-area="Admin" asp-action="DeactivateUser" asp-controller="UserManagement" method="post">
												@Html.AntiForgeryToken()
												<input type="hidden" name="userId" value="@user.Id"/>
												<button type="submit" class="btn btn-sm btn-danger" title="Deactivate this user">
													<i class="ri-user-unfollow-fill"></i>
												</button>
											</form>
										}
										else
										{
											<form class="reactivateUserForm" asp-area="Admin" asp-action="ReactivateUser" asp-controller="UserManagement" method="post">
												@Html.AntiForgeryToken()
												<input type="hidden" name="userId" value="@user.Id"/>
												<button type="submit" class="btn btn-sm btn-success" title="Activate this user">
													<i class="ri-user-star-fill"></i>
												</button>
											</form>
										}
										
										<form class="resetUserPassword" asp-area="Admin" asp-action="ResetUserPassword" asp-controller="UserManagement" method="post">
											@Html.AntiForgeryToken()
											<input type="hidden" name="userId" value="@user.Id"/>
											<button type="submit" class="btn btn-sm btn-success" title="Reset this user's password to the default password">
												<i class="bx bx-reset"></i>
											</button>
										</form>
										
									</div>
								</td>
							</tr>
						}
						</tbody>
					</table>

					<nav aria-label="Page Navigation">
						<ul class="pagination justify-content-center">
							@for (int i = 1; i <= Math.Ceiling((double)Model.TotalUsers / Model.PageSize); i++)
							{
								<li class="page-item @(Model.CurrentPage == i ? "active" : "")">
									<a class="page-link" asp-area="Admin" asp-controller="UserManagement" asp-action="UserManagement" method="get"
									   asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-adminId="@Model.AdminProfile.Id"> @i
									</a>
								</li>
							}
						</ul>
					</nav>
				</div>

			</div>

		</div>
	</div>

</main>


@* <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
 *@

<script>


  /*--------------------------
	# TOGGLE SIDE BAR
   --------------------------*/

	if (document.querySelector('.toggle-sidebar-btn')) {

		document.querySelector('.toggle-sidebar-btn').addEventListener('click', function (e) {

			document.body.classList.toggle('toggle-sidebar');
		});
	}

	/*---------------------------------------------------------------------------------------------------------------------
	# FETCH THE JSON FROM THE GetUserRoleDetails METHOD IN THE CONTROLLER AND POPULATE THE FIELDS FOR THE EDIT USER MODAL /
	--------------------------------------------------------------------------------------------------------------------*/


	document.addEventListener('DOMContentLoaded', function () {
		const buttons = document.querySelectorAll('.edit-user-btn');
		buttons.forEach(button => {
			button.addEventListener('click', function () {
				const userId = this.getAttribute('data-id');
				loadUserData(userId);
			});
		});
	});

	function loadUserData(userId) {
		if (!userId) {
			console.error('No user ID provided!');
			return;
		}

		fetch(`/Admin/UserManagement/GetUserRoleDetails?userId=${userId}`)
			.then(response => response.json())
			.then(user => {
				// Handle the response and populate modal fields
				document.querySelector("#editUserModal input[name='EditedUser.Id']").value = user.id;
				document.querySelector("#editUserModal input[name='EditedUser.UserName']").value = user.userName;
				document.querySelector("#editUserModal input[name='EditedUser.Email']").value = user.email;
				document.querySelector("#editUserModal input[name='EditedUser.PhoneNumber']").value = user.phoneNumber || "";
				document.querySelector("#editUserModal input[name='EditedUser.FirstName']").value = user.firstName;
				document.querySelector("#editUserModal input[name='EditedUser.LastName']").value = user.lastName;
				document.querySelector("#editUserModal input[name='EditedUser.CompanyName']").value = user.companyName;

				// Show the modal
				$('#editUserModal').modal('show');
			})
			.catch(error => {
				console.error("Error fetching user data:", error);
			});
	}


	/*--------------------------------------------------------------------------------------------------------
	# DYNAMICALLY ADD THE CORRECT ACTION ON THE FORM IN THE ADDMODAL AND SET THE DROPDOWN OPTIONS FOR POSTION
	---------------------------------------------------------------------------------------------------------*/


	document.addEventListener('DOMContentLoaded', function () {
		var addModal = document.getElementById('addModal');
		var createUserForm = document.getElementById('createUserForm');
		var modalTitle = document.getElementById('addModalLabel');

		addModal.addEventListener('show.bs.modal', function (event) {
			var button = event.relatedTarget; 
			var modalTitleText = button.getAttribute('data-modal-title'); 
			var positionSelect = addModal.querySelector('select[name="NewUser.Position"]'); 

			var options = positionSelect.querySelectorAll('option');
			options.forEach(option => option.remove());

			if (modalTitleText === "Create Administrator") {

				var adminOption = document.createElement('option');
				adminOption.value = "Administrator";
				adminOption.textContent = "Administrator";
				positionSelect.appendChild(adminOption);

			} else if (modalTitleText === "Create User") {

				var dispatcherOption = document.createElement('option');
				dispatcherOption.value = "Dispatcher";
				dispatcherOption.textContent = "Dispatcher";
				positionSelect.appendChild(dispatcherOption);

				var brokerOption = document.createElement('option');
				brokerOption.value = "Broker";
				brokerOption.textContent = "Broker";
				positionSelect.appendChild(brokerOption);
			}

			if (modalTitleText === "Create Administrator") {

				createUserForm.setAttribute('action', 'CreateAdministrator');
				modalTitle.textContent = 'Creating a new Administrator';

			} else if (modalTitleText === "Create User") {

				createUserForm.setAttribute('action', 'CreateUser');
				modalTitle.textContent = 'Creating a new User';
			}
		});
	});






</script>
