@using LoadVantage.Extensions
@using LoadVantage.Core.Models.Chat;

@model IEnumerable<ChatMessageViewModel>

@foreach (var message in Model)
{
	var isReceived = message.ReceiverId == User.GetUserId().Value;
	var isRead = message.IsRead ? "read" : ""; // Add 'read' class if the message is read.

	<div class="chat-message @(isReceived ? "received" : "sent") @isRead" 
	     data-message-id="@message.Id"
	     data-sender-id="@message.SenderId.ToString()"
	     data-receiver-id="@message.ReceiverId.ToString()"
	     data-is-received="@isReceived">

		<div class="message-content">
			<p>@message.Content</p>
		</div>
		<div class="message-timestamp">
			<span>
				@{
					var now = DateTime.Now;
					var messageDate = message.Timestamp;

					string displayTime;
					if (messageDate.Date == now.Date)
					{
						displayTime = messageDate.ToString("hh:mm tt");
					}
					else if (messageDate.Date == now.Date.AddDays(-1))
					{
						displayTime = "Yesterday " + messageDate.ToString("hh:mm tt");
					}
					else
					{
						displayTime = messageDate.ToString("MMM dd, yyyy hh:mm tt");
					}
				}
				@displayTime
			</span>
		</div>
	</div>
}



<script>

	$('.chat-message').click(function () {
		const messageId = $(this).data('message-id');
		const senderId = $(this).data('sender-id');
		const receiverId = $(this).data('receiver-id');
		const isReceived = $(this).data('is-received');

		// Only mark as read if it's a received message
		if (isReceived) {
			markMessagesAsRead(senderId, receiverId);
		}
	});

	function markMessagesAsRead(senderId, receiverId) {

		const receivedMessages = document.querySelectorAll(
				`.chat-message[data-sender-id="${senderId}"][data-receiver-id="${receiverId}"]:not(.read)`
			);
		$.ajax({
			type: "POST",
			url: "/Chat/MarkMessageAsRead",
			data: { senderId: senderId, receiverId: receiverId },
			headers: {
				'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // AntiForgery Key
			},
			success: function () {

				receivedMessages.forEach(message => {
					message.classList.add('read');

				}); 

			},
			error: function (xhr) {
				console.error("Error marking messages as read:", xhr.responseText);
			}
		});
	}

</script>