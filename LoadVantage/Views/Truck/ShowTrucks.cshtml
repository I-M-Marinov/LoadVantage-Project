@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using LoadVantage.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model LoadVantage.Core.Models.Truck.TrucksViewModel


@{
    
	Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
	ViewData["Title"] = "Trucks";

	var tempDataSuccessMessage = TempData.GetSuccessMessage();
	var tempDataErrorMessage = TempData.GetErrorMessage();
}

<!-- ======= Header ======= -->
@await Html.PartialAsync("_HeaderPartialView", Model.Profile)

<!-- ======= Sidebar ======= -->
@await Html.PartialAsync("_SidebarPartialView", Model.Profile)

<main id="main" class="main trucks">

	<div class="pagetitle">
		<h1>Trucks</h1>
		<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTruckModal">
			<i class="bi bi-truck"></i>
			Add Truck
		</button>	
		
	
	</div>
	
	<!-- Add Truck Modal -->
	<div class="modal fade" id="addTruckModal" tabindex="-1" aria-labelledby="addTruckModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<form asp-action="AddTruck" asp-controller="Truck" method="post" id="addTruckForm">
					@Html.AntiForgeryToken()
					<div class="modal-header">
						<h5 class="modal-title" id="addTruckModalLabel">Adding a truck</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<div class="mb-3">
							<label asp-for="NewTruck.TruckNumber" class="form-label text-center d-block" id="truckNumberLabel">Truck Number</label>
							<input asp-for="NewTruck.TruckNumber" class="form-control text-center">
							<span asp-validation-for="NewTruck.TruckNumber" class="badge badge-danger mt-1"></span>
						</div>
						<div class="mb-3">
							<label asp-for="NewTruck.Make" class="form-label text-center d-block">Make</label>
							<input asp-for="NewTruck.Make" class="form-control text-center">
							<span asp-validation-for="NewTruck.Make" class="badge badge-danger mt-1"></span>
						</div>
						<div class="mb-3">
							<label asp-for="NewTruck.Model" class="form-label text-center d-block">Model</label>
							<input asp-for="NewTruck.Model" class="form-control text-center">
							<span asp-validation-for="NewTruck.Model" class="badge badge-danger mt-1"></span>
						</div>
						<div class="mb-3">
							<label asp-for="NewTruck.Year" class="form-label text-center d-block">Year</label>
							<input asp-for="NewTruck.Year" class="form-control text-center">
							<span asp-validation-for="NewTruck.Year" class="badge badge-danger mt-1"></span>
						</div>
						<div class="mb-3">
							<label asp-for="NewTruck.IsAvailable" class="form-label text-center d-block">Available ?</label>
							<input name="NewTruck.IsAvailable" asp-for="NewTruck.IsAvailable" type="checkbox" class="form-check-input d-block mx-auto larger-checkbox" />
							<span asp-validation-for="NewTruck.IsAvailable" class="badge badge-danger mt-1"></span>

						</div>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-success text-center d-block">Add</button>
						<button type="button" class="btn btn-secondary text-center d-block" data-bs-dismiss="modal">Close</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	
	<!-- Confirm Deletion of a Truck Modal -->
	
	<div class="modal fade" id="deleteTruckModal" tabindex="-1" aria-labelledby="deleteTruckModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="deleteTruckModalLabel">Confirm Deletion</h5>
				</div>
				<i id="modal-icon" class="ri-delete-bin-fill text-danger" style="font-size: 2rem; text-align: center; display: block; margin: 1rem auto;"></i>
				<div class="modal-body text-center">
					Are you sure you want to delete this truck?
					<br>
					<small class="text-muted">(This action cannot be undone.)</small>
				</div>
				<div class="modal-footer justify-content-center">
					<form asp-action="DeleteTruck" asp-controller="Truck" method="post">
						@Html.AntiForgeryToken()
						<input type="hidden" name="id" id="deleteTruckId" />
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, Go Back</button>
						<button type="submit" class="btn btn-danger">Yes, Delete</button>
					</form>
				</div>
			</div>
		</div>
	</div>


	
	<!-- Edit Truck Modal -->

	<div class="modal fade" id="editTruckModal" tabindex="-1" role="dialog" aria-labelledby="editTruckModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editTruckModalLabel">Editing a truck</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<form asp-action="EditTruck" asp-controller="Truck" method="post" id="editTruckForm">
						@Html.AntiForgeryToken()

						<div class="form-group">
							<label asp-for="EditedTruck.TruckNumber" class="control-label text-center d-block" id="editedTruckNumberLabel"></label>
							<input name="EditedTruck.TruckNumber" asp-for="EditedTruck.TruckNumber" class="form-control text-center" />
							<span asp-validation-for="EditedTruck.TruckNumber" class="badge badge-danger mt-1"></span>
						</div>

						<div class="form-group">
							<label asp-for="EditedTruck.Make" class="control-label text-center d-block"></label>
							<input name="EditedTruck.Make" asp-for="EditedTruck.Make" class="form-control text-center" />
							<span asp-validation-for="EditedTruck.Make" class="badge badge-danger mt-1"></span>
						</div>

						<div class="form-group">
							<label asp-for="EditedTruck.Model" class="control-label text-center d-block"></label>
							<input name="EditedTruck.Model" asp-for="EditedTruck.Model" class="form-control text-center" />
							<span asp-validation-for="EditedTruck.Model" class="badge badge-danger mt-1"></span>
						</div>
						
						<div class="form-group">
							<label asp-for="EditedTruck.Year" class="control-label text-center d-block"></label>
							<input name="EditedTruck.Year" asp-for="EditedTruck.Year" class="form-control text-center" />
							<span asp-validation-for="EditedTruck.Year" class="badge badge-danger mt-1"></span>
						</div>

						<div class="form-group">
							<label asp-for="EditedTruck.IsAvailable" class="control-label text-center d-block">Available ?</label>
							<input name="EditedTruck.IsAvailable" asp-for="EditedTruck.IsAvailable" type="checkbox" class="form-check-input d-block mx-auto larger-checkbox" />
							<span asp-validation-for="EditedTruck.IsAvailable" class="badge badge-danger mt-1"></span>
						</div>

						<div class="modal-footer">
							<button type="submit" class="btn btn-success">Save</button>
							<input type="hidden" name="EditedTruck.Id" asp-for="EditedTruck.Id" />
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>

	

	<div class="card">
		
		<div class="card-body position-relative">
			@if (!string.IsNullOrEmpty(tempDataSuccessMessage))
			{
				<div class="badge badge-danger mt-1 position-absolute top-0 start-50 translate-middle-x w-75" id="success-message">@tempDataSuccessMessage</div>
			}

			@if (!string.IsNullOrEmpty(tempDataErrorMessage))
			{
				<div class="badge badge-danger mt-1 position-absolute top-0 start-50 translate-middle-x w-75" id="error-message">@tempDataErrorMessage</div>
			}
			<div class="table-responsive mt-4" id="trucks-table">
				<h5 class="card-title">Truck List</h5>
				<table class="table table-bordered table-hover table-sm">
					<thead>
					<tr>
						<th class="text-center" scope="col">Truck Number</th>
						<th class="text-center" scope="col">Make</th>
						<th class="text-center" scope="col">Model</th>
						<th class="text-center" scope="col">Year</th>
						<th class="text-center" scope="col">Driver</th>
						<th class="text-center" scope="col">Available</th>
						<th class="text-center" scope="col">Actions</th>
					</tr>
					</thead>
					<tbody>
					@foreach (var truck in Model.Trucks)
					{
						<tr>
							<td class="text-center">@truck.TruckNumber</td>
							<td class="text-center">@truck.Make</td>
							<td class="text-center">@truck.Model</td>
							<td class="text-center">@truck.Year</td>
							<td class="text-center">@(truck.DriverName ?? "N/A")</td>
							<td class="text-center">
								<span class="badge @(truck.IsAvailable ? "truck-success" : "truck-danger")">
									<i class="@(truck.IsAvailable ? "bi bi-patch-check" : "bi bi-patch-exclamation")"></i>
								</span>
							</td>
							<td class="text-center">
								<button type="button" class="btn btn-outline-primary edit-truck-btn btn-sm" data-id="@truck.Id">Edit</button>
								<button type="button" class="btn btn-outline-danger btn-sm truck-delete-btn" data-truck-id="@truck.Id">Delete</button>
							</td>
						</tr>
					}

					</tbody>
				</table>
			</div>

		</div>
	</div>

</main>

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>



<script>

	// Populate the Edit Truck Form 

	document.addEventListener("DOMContentLoaded", function () {
		document.addEventListener("click", function (event) {
			if (event.target && event.target.matches(".edit-truck-btn")) {
				const truckId = event.target.getAttribute("data-id");

				fetch(`/Truck/GetTruckDetails?id=${truckId}`)
					.then(response => response.json())
					.then(truck => {
						document.querySelector("#editTruckModal input[name='EditedTruck.Id']").value = truck.id;
						document.querySelector("#editTruckModal input[name='EditedTruck.TruckNumber']").value = truck.truckNumber;
						document.querySelector("#editTruckModal input[name='EditedTruck.Make']").value = truck.make;
						document.querySelector("#editTruckModal input[name='EditedTruck.Model']").value = truck.model;
						document.querySelector("#editTruckModal input[name='EditedTruck.Year']").value = truck.year;
						document.querySelector("#editTruckModal input[name='EditedTruck.IsAvailable']").checked = truck.isAvailable;

						const modal = new bootstrap.Modal(document.getElementById("editTruckModal"));
						modal.show();
					})
					.catch(error => console.error("Error loading truck details:", error));
			}
		});
	});

	

	if (document.querySelector('.toggle-sidebar-btn')) {

		document.querySelector('.toggle-sidebar-btn').addEventListener('click', function (e) {

			document.body.classList.toggle('toggle-sidebar');
		});
	}


	/*-------------------------------------------------------------------------------------
	# SELECTING THE DELETE TRUCK BUTTON AND SHOWING THE MODAL ON CLICK
	--------------------------------------------------------------------------------------*/
	document.addEventListener('DOMContentLoaded', () => {

		const deleteModalElement = document.getElementById('deleteTruckModal');
		if (deleteModalElement) {
			const deleteModal = new bootstrap.Modal(deleteModalElement);
			const deleteButtons = document.querySelectorAll('.truck-delete-btn');
			const deleteTruckIdInput = document.getElementById('deleteTruckId');

			deleteButtons.forEach(button => {
				button.addEventListener('click', event => {
					event.preventDefault();
					const truckId = button.getAttribute('data-truck-id');
					deleteTruckIdInput.value = truckId;
					deleteModal.show();
				});
			});
		}
	});



</script>

